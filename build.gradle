plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'server'
version = '0.0.1-SNAPSHOT'

bootJar {
	archiveFileName = 'cubetalk-server.jar' // JAR 파일 이름 설정
	destinationDirectory = file("$rootDir")
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'junit:junit:4.13.1'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	/* MongoDB */
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	/* websocket */
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'com.google.code.gson:gson:2.8.9'

	/* 유효성 검증 */
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	/* RabbitMQ */
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-reactor-netty'

	/* Swagger */
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'


}

tasks.named('test') {
	useJUnitPlatform()
}
